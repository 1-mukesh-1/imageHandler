package imagehandler.model.imagecompression;

/**
 * This class contains the compression objects for testing.
 */
public class CompressionObjectsForTesting {
  static final CompressedImage TWO_CROSS_TWO_NO_PADDING = new CompressedImage(
      new Channel(
          new double[][]{
              {102.0, 179.0}, {92.0, 14.0}
          },
          20.0,
          new double[][]{
              {193.49999999999997, 0.499999999999999}, {87.49999999999999, -77.5}
          },
          new double[][]{
              {101.99999999999997, 178.99999999999994}, {91.99999999999997,
              13.999999999999986}
          }
      ),
      new Channel(
          new double[][]{
              {106.0, 71.0}, {188.0, 20.0}
          },
          20.0,
          new double[][]{
              {192.49999999999997, 101.49999999999999}, {-15.500000000000004,
              -66.49999999999999}
          },
          new double[][]{
              {105.99999999999997, 70.99999999999997}, {187.99999999999994,
              19.99999999999999}
          }
      ),
      new Channel(
          new double[][]{
              {102.0, 121.0}, {210.0, 214.0}
          },
          20.0,
          new double[][]{
              {323.49999999999994, -11.499999999999996}, {-100.49999999999999,
              -7.499999999999998}
          },
          new double[][]{
              {101.99999999999996, 120.99999999999994}, {209.99999999999991,
              213.99999999999994}
          }
      )
  );

  static final CompressedImage THREE_CROSS_THREE_PADDING = new CompressedImage(
      new Channel(
          new double[][]{
              {202.0, 87.0, 116.0}, {99.0, 103.0, 151.0}, {130.0, 149.0, 52.0}},
          20.0,
          new double[][]{
              {202.2499999999999, 112.74999999999996, 55.49999999999999,
                  133.49999999999997}, {106.74999999999993, 0.0, 0.0,
              25.999999999999996}, {43.499999999999986, -17.5, 59.499999999999986,
              -17.5}, {139.49999999999997, 25.999999999999996, 0.0, 25.999999999999996}
          },
          new double[][]{
              {202.1874999999999, 87.18749999999993, 115.81249999999991},
              {99.18749999999994, 103.18749999999993, 150.8124999999999},
              {139.31249999999991, 139.31249999999991, 52.187499999999986}
          }),
      new Channel(
          new double[][]{
              {1.0, 87.0, 235.0}, {157.0, 37.0, 129.0}, {191.0, 187.0, 20.0}
          },
          20.0,
          new double[][]{
              {260.99999999999994, 68.99999999999999, 16.999999999999996,
                  181.99999999999997}, {61.99999999999996, -109.99999999999997, 0.0,
              9.999999999999998}, {-53.0, 52.999999999999986, -102.99999999999999,
              52.999999999999986}, {189.0, 9.999999999999998, 0.0, 9.999999999999998}
          },
          new double[][]{
              {0, 86.99999999999996, 235.99999999999994},
              {156.99999999999994, 36.999999999999964, 128.99999999999994},
              {188.99999999999994, 188.99999999999994, 20.00000000000001}
          }
      ),
      new Channel(
          new double[][]{
              {160.0, 203.0, 57.0}, {21.0, 252.0, 235.0}, {88.0, 48.0, 218.0}
          },
          20.0,
          new double[][]{
              {320.49999999999994, 65.5, -136.99999999999997, 145.99999999999997},
              {143.49999999999997, 106.50000000000001, 0.0, 108.99999999999999}, {0.0,
              -88.99999999999999, 93.99999999999999, -88.99999999999999},
              {67.99999999999999, 108.99999999999999, 0.0, 108.99999999999999}
          },
          new double[][]{
              {160.49999999999991, 203.49999999999994, 56.999999999999964},
              {0.9999999999999998, 274.4999999999999, 234.99999999999991},
              {67.99999999999996, 67.99999999999996, 217.99999999999994}
          }
      )
  );
}
